{{- if .Values.bootnode.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "bootnode.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "geth.name" . }}
    chart: {{ template "geth.chart" . }}
    component: "bootnode"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "geth.name" . }}
      release: {{ .Release.Name | quote }}
      component: "bootnode"
  template:
    metadata:
      labels:
        app: {{ template "geth.name" . }}
        release: {{ .Release.Name | quote }}
        component: "bootnode"
      annotations:
        checksum/bootnode-secret: {{ include (print $.Template.BasePath "/bootnode-secret.yaml") . | sha256sum }}
    spec:
    {{- with .Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
      serviceAccountName: {{ template "bootnode.fullname" . }}
      priorityClassName: {{ .Values.bootnode.priorityClassName | quote }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.bootnode.image.repository }}:{{ .Values.bootnode.image.tag }}"
          imagePullPolicy: {{ .Values.bootnode.image.pullPolicy }}
          command: ["bootnode"]
          args:
            - "--nodekey=/etc/ethereum/nodekey"
            - "--nat=extip:$(POD_IP)"
          {{- range .Values.bootnode.extraFlags }}
            - {{ . | quote }}
          {{- end }}
          volumeMounts:
            - name: nodekey
              mountPath: /etc/ethereum
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 8545
              name: http-rpc
              protocol: TCP
            - containerPort: 30303
              name: discovery-tcp
              protocol: TCP
            - containerPort: 30303
              name: discovery-udp
              protocol: UDP
            - containerPort: 30301
              name: bootnode-tcp
              protocol: TCP
            - containerPort: 30301
              name: bootnode-udp
              protocol: UDP
        {{- with .Values.bootnode.resources }}
          resources:
            {{ toYaml . | nindent 12 | trim }}
        {{- end }}
      volumes:
        - name: nodekey
          secret:
            secretName: {{ template "bootnode.fullname" . }}
            items:
              - key: nodeKey
                path: nodekey
{{- end }}
